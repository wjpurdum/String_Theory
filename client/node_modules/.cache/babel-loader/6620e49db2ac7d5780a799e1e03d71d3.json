{"ast":null,"code":"import _toConsumableArray from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wpurdum/Documents/string_theory/client/src/containers/Main.js\";\nimport React from \"react\";\nimport promptValues from \"../client-data/prompt-values\";\nimport { postPreferences, callBackendAPI } from \"../requests/index\";\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      submitted: false,\n      selectedItems: new Map()\n    };\n    _this._renderRadioButtons = _this._renderRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleSelect = _this._handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._submitPreferences = _this._submitPreferences.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"_mapHelper\",\n    value: function _mapHelper() {\n      var array = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.selectedItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ref3 = _step.value;\n\n          var _ref2 = _slicedToArray(_ref3, 2);\n\n          var k = _ref2[0];\n          var v = _ref2[1];\n          console.log(k, v);\n          var newObject = {\n            k: v\n          };\n          array.push(newObject);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      console.log(array, \"the array before finishing\");\n    }\n  }, {\n    key: \"_handleSelect\",\n    value: function _handleSelect(e) {\n      var value = e.target.value;\n      var checked = e.target.checked;\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.selectedItems.set(value, checked)\n        };\n      });\n      console.log(this.state, \"the state after the change\");\n    } //   function mapToJson(map) {\n    //     return JSON.stringify([...map]);\n    // }\n    // function jsonToMap(jsonStr) {\n    //     return new Map(JSON.parse(jsonStr));\n    // }\n\n  }, {\n    key: \"_submitPreferences\",\n    value: function _submitPreferences() {\n      var preferences = this.state.selectedItems; //   console.log(preferences.split())\n\n      var iterator1 = preferences.entries();\n      console.log(iterator1, \"waht the hekc is this\");\n      console.log(this.state, \"What is the state\");\n      var postBody = JSON.stringify(_toConsumableArray(preferences));\n      console.log(typeof postBody, \"this should be true\");\n      console.log(this.state.selectedItems[0], \"is this a valid value\");\n      console.log('the post body', postBody); //   Promise.resolve(callBackendAPI)\n\n      Promise.resolve(postPreferences(postBody)).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error, \"The error\");\n      });\n    }\n  }, {\n    key: \"_renderRadioButtons\",\n    value: function _renderRadioButtons() {\n      var _this2 = this;\n\n      var radioButtons = promptValues.map(function (prompt, index) {\n        return React.createElement(\"div\", {\n          className: \"prompt\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, prompt.prompt), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: prompt.valueOne.value,\n          onChange: _this2._handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), prompt.valueOne.label), React.createElement(\"label\", {\n          className: \"value-two-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: prompt.valueTwo.value,\n          onChange: _this2._handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), prompt.valueTwo.label));\n      });\n      return radioButtons;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var radioButtons = this._renderRadioButtons();\n\n      return React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Answer the questions to generate a playlist\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, radioButtons), React.createElement(\"button\", {\n        className: \"submit-button\",\n        onClick: this._submitPreferences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Play it!\"));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/wpurdum/Documents/string_theory/client/src/containers/Main.js"],"names":["React","promptValues","postPreferences","callBackendAPI","Main","props","state","submitted","selectedItems","Map","_renderRadioButtons","bind","_handleSelect","_submitPreferences","array","k","v","console","log","newObject","push","e","value","target","checked","setState","prevState","checkedItems","set","preferences","iterator1","entries","postBody","JSON","stringify","Promise","resolve","then","response","catch","error","radioButtons","map","prompt","index","valueOne","label","valueTwo","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport promptValues from \"../client-data/prompt-values\"\nimport {postPreferences, callBackendAPI} from \"../requests/index\";\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        submitted: false,\n        selectedItems: new Map()\n    };\n    this._renderRadioButtons = this._renderRadioButtons.bind(this);\n    this._handleSelect = this._handleSelect.bind(this);\n    this._submitPreferences = this._submitPreferences.bind(this);\n  }\n\n  _mapHelper() {\n      let array = []\n    for (const [k, v] of this.state.selectedItems) {\n        console.log(k, v)\n        let newObject = {\n            k: v\n        }\n        array.push(newObject)\n      }\n      console.log(array, \"the array before finishing\")\n     \n  }\n\n  _handleSelect(e) {\n      const value = e.target.value\n      const checked = e.target.checked\n      this.setState(prevState => ({\n          checkedItems: prevState.selectedItems.set(value, checked)\n      }))\n      console.log(this.state, \"the state after the change\")\n  }\n//   function mapToJson(map) {\n//     return JSON.stringify([...map]);\n// }\n// function jsonToMap(jsonStr) {\n//     return new Map(JSON.parse(jsonStr));\n// }\n\n  _submitPreferences() {\n      const preferences = this.state.selectedItems;\n    //   console.log(preferences.split())\n      var iterator1 = preferences.entries();\n      console.log(iterator1, \"waht the hekc is this\")\n      console.log(this.state, \"What is the state\")\n      let postBody = JSON.stringify([...preferences]);\n      console.log(typeof(postBody), \"this should be true\")\n      console.log(this.state.selectedItems[0], \"is this a valid value\")\n      \n      console.log('the post body', postBody)\n    //   Promise.resolve(callBackendAPI)\n\n    Promise.resolve(postPreferences(postBody))\n      .then(response => {\n          console.log(response)\n      })\n      .catch (error => {\n          console.log(error, \"The error\")\n      })\n\n  }\n\n  _renderRadioButtons() {\n      const radioButtons = promptValues.map((prompt, index) => {\n          return (\n            <div className=\"prompt\" key={index}>\n            <p>{prompt.prompt}</p>\n              <label>\n                <input\n                type=\"radio\" \n                value={prompt.valueOne.value}\n                onChange={this._handleSelect}\n                />\n                {prompt.valueOne.label}\n              </label>\n              <label className=\"value-two-label\">\n                <input \n                  type=\"radio\" \n                  value={prompt.valueTwo.value}\n                  onChange={this._handleSelect}\n                />\n                {prompt.valueTwo.label}\n              </label>\n              </div>\n          )\n      })\n      return radioButtons\n  }\n\n\n\n  render() {\n      const radioButtons = this._renderRadioButtons()\n    return (<div className=\"main-container\">\n              <h1>Answer the questions to generate a playlist</h1>\n                <form>\n                    {radioButtons}\n                </form>\n                <button \n                className=\"submit-button\"\n                onClick={this._submitPreferences}\n                >Play it!</button>\n          </div>)\n  }\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}