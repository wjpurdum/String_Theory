{"ast":null,"code":"import _slicedToArray from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wpurdum/Documents/string_theory/client/src/containers/Main.js\";\nimport React from \"react\";\nimport promptValues from \"../client-data/prompt-values\";\nimport Header from \"../components/header\";\nimport { postPreferences } from \"../requests/index\";\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      submitted: false,\n      selectedItems: new Map()\n    };\n    _this._renderRadioButtons = _this._renderRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleSelect = _this._handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._submitPreferences = _this._submitPreferences.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._mapHelper = _this._mapHelper.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"_mapHelper\",\n    value: function _mapHelper() {\n      var array = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.state.selectedItems[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _ref3 = _step.value;\n\n          var _ref2 = _slicedToArray(_ref3, 2);\n\n          var k = _ref2[0];\n          var v = _ref2[1];\n          array.push(k);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return array;\n    }\n  }, {\n    key: \"_handleSelect\",\n    value: function _handleSelect(e) {\n      var value = e.target.value;\n      var checked = e.target.checked;\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.selectedItems.set(value, checked)\n        };\n      });\n    }\n  }, {\n    key: \"_submitPreferences\",\n    value: function _submitPreferences() {\n      var _this2 = this;\n\n      var preferencesConverted = this._mapHelper();\n\n      var postBody = {\n        preferences: preferencesConverted\n      };\n      Promise.resolve(postPreferences(postBody)).then(function (response) {\n        _this2.setState({\n          selectedSong: response\n        });\n      }).catch(function (error) {\n        console.log(error, \"The error\");\n      });\n    }\n  }, {\n    key: \"_renderRadioButtons\",\n    value: function _renderRadioButtons() {\n      var _this3 = this;\n\n      var radioButtons = promptValues.map(function (prompt, index) {\n        return React.createElement(\"div\", {\n          className: \"prompt\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, prompt.prompt), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: prompt.valueOne.value,\n          onChange: _this3._handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), prompt.valueOne.label), React.createElement(\"label\", {\n          className: \"value-two-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: prompt.valueTwo.value,\n          onChange: _this3._handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), prompt.valueTwo.label));\n      });\n      return radioButtons;\n    }\n  }, {\n    key: \"_selectedSong\",\n    value: function _selectedSong() {\n      var selectedSong = this.state.selectedSong;\n      return React.createElement(\"div\", {\n        className: \"selected-song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, selectedSong.band), React.createElement(\"span\", {\n        className: \"song-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\".concat(selectedSong.songTitle)), \" \", \"from the album \", React.createElement(\"span\", {\n        className: \"album-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"\".concat(selectedSong.album)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Released in \".concat(selectedSong.releaseYear)), React.createElement(\"a\", {\n        href: selectedSong.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Listen Now\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var radioButtons = this._renderRadioButtons();\n\n      var selectedSong = this.state.selectedSong ? this._selectedSong() : null;\n      return React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Answer a few questions to discover new string songs\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, radioButtons), React.createElement(\"button\", {\n        className: \"submit-button\",\n        onClick: this._submitPreferences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Play it!\"), selectedSong);\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/wpurdum/Documents/string_theory/client/src/containers/Main.js"],"names":["React","promptValues","Header","postPreferences","Main","props","state","submitted","selectedItems","Map","_renderRadioButtons","bind","_handleSelect","_submitPreferences","_mapHelper","array","k","v","push","e","value","target","checked","setState","prevState","checkedItems","set","preferencesConverted","postBody","preferences","Promise","resolve","then","response","selectedSong","catch","error","console","log","radioButtons","map","prompt","index","valueOne","label","valueTwo","band","songTitle","album","releaseYear","link","_selectedSong","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport promptValues from \"../client-data/prompt-values\"\nimport Header from \"../components/header\"\nimport {postPreferences} from \"../requests/index\";\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        submitted: false,\n        selectedItems: new Map()\n    };\n    this._renderRadioButtons = this._renderRadioButtons.bind(this);\n    this._handleSelect = this._handleSelect.bind(this);\n    this._submitPreferences = this._submitPreferences.bind(this);\n    this._mapHelper = this._mapHelper.bind(this)\n  }\n\n  _mapHelper() {\n      let array = []\n    for (const [k, v] of this.state.selectedItems) {\n        array.push(k)\n      }\n     return array\n  }\n\n  _handleSelect(e) {\n      const value = e.target.value\n      const checked = e.target.checked\n      this.setState(prevState => ({\n          checkedItems: prevState.selectedItems.set(value, checked)\n      }))\n  }\n  _submitPreferences() {\n      const preferencesConverted = this._mapHelper()\n    let postBody = {\n        preferences: preferencesConverted\n    }\n    Promise.resolve(postPreferences(postBody))\n      .then(response => {\n          this.setState({\n              selectedSong: response\n          })\n      })\n      .catch (error => {\n          console.log(error, \"The error\")\n      })\n\n  }\n\n  _renderRadioButtons() {\n      const radioButtons = promptValues.map((prompt, index) => {\n          return (\n            <div className=\"prompt\" key={index}>\n            <h1>{prompt.prompt}</h1>\n              <label>\n                <input\n                type=\"radio\" \n                value={prompt.valueOne.value}\n                onChange={this._handleSelect}\n                />\n                {prompt.valueOne.label}\n              </label>\n              <label className=\"value-two-label\">\n                <input \n                  type=\"radio\" \n                  value={prompt.valueTwo.value}\n                  onChange={this._handleSelect}\n                />\n                {prompt.valueTwo.label}\n              </label>\n              </div>\n          )\n      })\n      return radioButtons\n  }\n\n  _selectedSong() {\n      const selectedSong = this.state.selectedSong;\n      return (\n          <div className=\"selected-song\">\n            <h2>{selectedSong.band}</h2>\n            <span className=\"song-title\">{`${selectedSong.songTitle}`}</span> {`from the album `}<span className=\"album-title\">{`${selectedSong.album}`}</span>\n            <p>{`Released in ${selectedSong.releaseYear}`}</p>\n            <a href={selectedSong.link}>\n                Listen Now\n            </a>\n          </div>\n      )\n  }\n\n\n\n\n\n  render() {\n      const radioButtons = this._renderRadioButtons()\n      const selectedSong = this.state.selectedSong ? this._selectedSong() : null;\n    return (\n        \n        <div className=\"main-container\">\n            <Header/>\n              <h1>Answer a few questions to discover new string songs</h1>\n                <form>\n                    {radioButtons}\n                </form>\n                <button \n                className=\"submit-button\"\n                onClick={this._submitPreferences}\n                >Play it!</button>\n                {selectedSong}\n          </div>)\n  }\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}