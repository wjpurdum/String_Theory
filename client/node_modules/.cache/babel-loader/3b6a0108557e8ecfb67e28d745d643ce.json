{"ast":null,"code":"import _classCallCheck from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/wpurdum/Documents/string_theory/client/src/containers/Main.js\";\nimport React from \"react\";\nimport promptValues from \"../client-data/prompt-values\";\nimport Header from \"../components/header\";\nimport { postPreferences } from \"../requests/index\";\nimport { processMap } from \"../helpers/helpers\";\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {\n      submitted: false,\n      selectedItems: new Map()\n    };\n    _this._renderRadioButtons = _this._renderRadioButtons.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._handleSelect = _this._handleSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._submitPreferences = _this._submitPreferences.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"_handleSelect\",\n    value: function _handleSelect(e) {\n      var value = e.target.value;\n      var checked = e.target.checked;\n      this.setState(function (prevState) {\n        return {\n          checkedItems: prevState.selectedItems.set(value, checked)\n        };\n      });\n    }\n  }, {\n    key: \"_submitPreferences\",\n    value: function _submitPreferences() {\n      var _this2 = this;\n\n      var preferencesConverted = processMap(this.state.selectedItems);\n      var postBody = {\n        preferences: preferencesConverted\n      };\n      Promise.resolve(postPreferences(postBody)).then(function (response) {\n        _this2.setState({\n          selectedSong: response\n        });\n      }).catch(function (error) {\n        console.log(error, \"The error from submit\");\n      });\n    }\n  }, {\n    key: \"_renderRadioButtons\",\n    value: function _renderRadioButtons() {\n      var _this3 = this;\n\n      var radioButtons = promptValues.map(function (prompt, index) {\n        return React.createElement(\"div\", {\n          className: \"prompt\",\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, prompt.prompt), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: prompt.valueOne.value,\n          onChange: _this3._handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), prompt.valueOne.label), React.createElement(\"label\", {\n          className: \"value-two-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: prompt.valueTwo.value,\n          onChange: _this3._handleSelect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), prompt.valueTwo.label));\n      });\n      return radioButtons;\n    }\n  }, {\n    key: \"_selectedSong\",\n    value: function _selectedSong() {\n      var selectedSong = this.state.selectedSong;\n      return React.createElement(\"div\", {\n        className: \"selected-song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, selectedSong.band), React.createElement(\"span\", {\n        className: \"song-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\".concat(selectedSong.songTitle)), \" \", \"from the album \", React.createElement(\"span\", {\n        className: \"album-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"\".concat(selectedSong.album)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Released in \".concat(selectedSong.releaseYear)), React.createElement(\"a\", {\n        href: selectedSong.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Listen Now\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var radioButtons = this._renderRadioButtons();\n\n      var selectedSong = this.state.selectedSong ? this._selectedSong() : null;\n      return React.createElement(\"div\", {\n        className: \"main-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Answer a few questions to discover new string songs\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, radioButtons), React.createElement(\"button\", {\n        className: \"submit-button\",\n        onClick: this._submitPreferences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Play it!\"), selectedSong);\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport default Main;","map":{"version":3,"sources":["/Users/wpurdum/Documents/string_theory/client/src/containers/Main.js"],"names":["React","promptValues","Header","postPreferences","processMap","Main","props","state","submitted","selectedItems","Map","_renderRadioButtons","bind","_handleSelect","_submitPreferences","e","value","target","checked","setState","prevState","checkedItems","set","preferencesConverted","postBody","preferences","Promise","resolve","then","response","selectedSong","catch","error","console","log","radioButtons","map","prompt","index","valueOne","label","valueTwo","band","songTitle","album","releaseYear","link","_selectedSong","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport promptValues from \"../client-data/prompt-values\"\nimport Header from \"../components/header\"\nimport { postPreferences } from \"../requests/index\";\nimport { processMap } from \"../helpers/helpers\"\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n      selectedItems: new Map()\n    };\n    this._renderRadioButtons = this._renderRadioButtons.bind(this);\n    this._handleSelect = this._handleSelect.bind(this);\n    this._submitPreferences = this._submitPreferences.bind(this);\n  }\n  _handleSelect(e) {\n    const value = e.target.value\n    const checked = e.target.checked\n    this.setState(prevState => ({\n      checkedItems: prevState.selectedItems.set(value, checked)\n    }))\n  }\n  _submitPreferences() {\n    const preferencesConverted = processMap(this.state.selectedItems)\n    const postBody = {\n      preferences: preferencesConverted\n    }\n    Promise.resolve(postPreferences(postBody)).then(response => {\n      this.setState({\n        selectedSong: response\n      })\n    }).catch(error => {\n      console.log(error, \"The error from submit\")\n    })\n  }\n  _renderRadioButtons() {\n    const radioButtons = promptValues.map((prompt, index) => {\n      return (<div className=\"prompt\" key={index}>\n            <h1>{prompt.prompt}</h1>\n              <label>\n                <input\n                type=\"radio\" \n                value={prompt.valueOne.value}\n                onChange={this._handleSelect}\n                />\n                {prompt.valueOne.label}\n              </label>\n              <label className=\"value-two-label\">\n                <input \n                  type=\"radio\" \n                  value={prompt.valueTwo.value}\n                  onChange={this._handleSelect}\n                />\n                {prompt.valueTwo.label}\n              </label>\n              </div>)\n    })\n    return radioButtons\n  }\n  _selectedSong() {\n    const selectedSong = this.state.selectedSong;\n    return (<div className=\"selected-song\">\n            <h2>{selectedSong.band}</h2>\n            <span className=\"song-title\">{`${selectedSong.songTitle}`}</span> {`from the album `}<span className=\"album-title\">{`${selectedSong.album}`}</span>\n            <p>{`Released in ${selectedSong.releaseYear}`}</p>\n            <a href={selectedSong.link}>\n                Listen Now\n            </a>\n          </div>)\n  }\n  render() {\n    const radioButtons = this._renderRadioButtons()\n    const selectedSong = this.state.selectedSong ? this._selectedSong() : null;\n    return (<div className=\"main-container\">\n            <Header/>\n              <h1>Answer a few questions to discover new string songs</h1>\n                <form>\n                    {radioButtons}\n                </form>\n                <button \n                className=\"submit-button\"\n                onClick={this._submitPreferences}\n                >Play it!</button>\n                {selectedSong}\n          </div>)\n  }\n}\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}