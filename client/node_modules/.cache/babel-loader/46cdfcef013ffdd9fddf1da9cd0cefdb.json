{"ast":null,"code":"import _slicedToArray from \"/Users/wpurdum/Documents/string_theory/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nexport var processMap = function processMap(map) {\n  var preferences = [];\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = map[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _ref3 = _step.value;\n\n      var _ref2 = _slicedToArray(_ref3, 1);\n\n      var k = _ref2[0];\n      preferences.push(k);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return preferences;\n};","map":{"version":3,"sources":["/Users/wpurdum/Documents/string_theory/client/src/helpers/helpers.js"],"names":["processMap","map","preferences","k","push"],"mappings":";AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AACjC,MAAIC,WAAW,GAAG,EAAlB;AADiC;AAAA;AAAA;;AAAA;AAEjC,yBAAkBD,GAAlB,8HAAuB;AAAA;;AAAA;;AAAA,UAAXE,CAAW;AACrBD,MAAAA,WAAW,CAACE,IAAZ,CAAiBD,CAAjB;AACD;AAJgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKjC,SAAOD,WAAP;AACD,CANM","sourcesContent":["export const processMap = (map) => {\n  let preferences = [];\n  for (const [k] of map) {\n    preferences.push(k)\n  }\n  return preferences;\n}\n\n"]},"metadata":{},"sourceType":"module"}